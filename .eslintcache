[{"/Users/halah/todo-app/src/index.js":"1","/Users/halah/todo-app/src/App.js":"2","/Users/halah/todo-app/src/reportWebVitals.js":"3","/Users/halah/todo-app/src/components/Form.js":"4","/Users/halah/todo-app/src/components/TodoList.js":"5","/Users/halah/todo-app/src/components/Todo.js":"6"},{"size":504,"mtime":1617860725606,"results":"7","hashOfConfig":"8"},{"size":1978,"mtime":1617853243054,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1618296895815,"results":"10","hashOfConfig":"8"},{"size":2155,"mtime":1618296928488,"results":"11","hashOfConfig":"8"},{"size":713,"mtime":1617833152618,"results":"12","hashOfConfig":"8"},{"size":842,"mtime":1608603016534,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9fycd7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/halah/todo-app/src/index.js",[],["28","29"],"/Users/halah/todo-app/src/App.js",["30"],"//we need to get what ever we type in the input and save it in to a state.\n\n\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  //useState for the textInput value to set it in a state. and the function setInputText that allow change the inputText value and update it. and this state will reset every time we hit submit. \n\n\n//state \n  const [inputText, setInputText] = useState (\"\");\n  //store todos in another state. will be an array.\n  const [todos, setTodos]= useState([]);\n  const [status, setStatus] = useState (\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n  //Run Once when the app start\nuseEffect (()=> {\n\ngetLocalTodos();\n}, []);\n\n\n//use Effect\n  useEffect (()=> {\n\n    filterHandler();\n    saveLocalTodos();\n\n  }, [todos, status]);\n\n\n\n//functions\nconst filterHandler = () => {\n  switch(status) {\n  case \"completed\":\n    setFilteredTodos(todos.filter(todo => todo.completed === true));\n  break;\n\n  case \"uncompleted\":\n    setFilteredTodos(todos.filter(todo => todo.completed === false));\n    break;\n    default:\n      setFilteredTodos(todos);\n      break;\n  }\n};\n\n//save to local \n\nconst saveLocalTodos = () => {\n  \n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n\n\n};\n\nconst getLocalTodos = () => {\n  if (localStorage.getItem('todos') === null){\n    localStorage.setItem('todos', JSON.stringify([]));\n\n  }else {\n   let todoLocal =  JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal);\n  \n  }\n\n\n};\n\n  return (\n    <div className=\"App\">\n      <header>\n     <h1>Todo List</h1>\n     </header>\n     <Form \n     inputText={inputText} \n     todos={todos} \n     setTodos={setTodos} \n     setInputText={setInputText}\n     setStatus ={setStatus}\n     />\n     <TodoList \n     \n     setTodos={setTodos} \n     todos={todos}\n     filteredTodos={filteredTodos}\n     \n     />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/halah/todo-app/src/reportWebVitals.js",[],"/Users/halah/todo-app/src/components/Form.js",[],"/Users/halah/todo-app/src/components/TodoList.js",[],"/Users/halah/todo-app/src/components/Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":34,"column":6,"nodeType":"37","endLine":34,"endColumn":21,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"44","text":"45"},[868,883],"[todos, status, filterHandler, saveLocalTodos]"]